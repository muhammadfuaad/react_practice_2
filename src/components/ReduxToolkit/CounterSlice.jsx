// src/features/counter/counterSlice.js
import { createSlice } from '@reduxjs/toolkit';

const counterSlice = createSlice({
  name: 'counterApp',
  initialState: { value: 0 },
  reducers: {
    increment: state => {
      state.value += 1;
    },
    decrement: state => {
      state.value -= 1;
    },
    incrementByAmount: (state, action) => {
      state.value += action.payload;
    }
  }
});

export const { increment, decrement, incrementByAmount } = counterSlice.actions;

export default counterSlice.reducer;

// `createSlice` is a function provided by Redux Toolkit that simplifies the process of creating a slice of the Redux state. 
// It automatically generates action creators and action types based on the provided reducers.

// `name`: The name of the slice, which will be used as a prefix for the generated action types.

// `initialState`: The initial state of the slice. Here, it is an object with a single property value set to 0.

// `reducers`: An object where each key is the name of an action and the value is a reducer function that handles the 
// corresponding action. The reducer functions are:

// `increment`: Increments the value by 1.
// `decrement`: Decrements the value by 1.
// `incrementByAmount`: Increments the value by the payload of the action.

// `counterSlice.actions`: Redux Toolkit automatically generates action creators for each reducer function. 
// Here, we destructure and export the increment, decrement, and incrementByAmount action creators.
// `counterSlice.reducer`: The reducer function generated by createSlice which handles the state changes based 
// on the dispatched actions. We export this as the default export.

